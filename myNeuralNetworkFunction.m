function [y1] = myNeuralNetworkFunction(x1)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 21-Apr-2014 18:36:44.
% 
% [y1] = myNeuralNetworkFunction(x1) takes these arguments:
%   x = 20xQ matrix, input #1
% and returns:
%   y = 2xQ matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

  % ===== NEURAL NETWORK CONSTANTS =====
  
  % Input 1
  x1_step1_xoffset = [-0.530253361296572;-0.505012370478456;-0.526807060273068;-0.530035817720838;-0.513756588021702;-0.517840894045747;-0.516719780394065;-0.527828742116969;-0.530253361296572;-0.514649571732143;-0.527824004043962;-0.552091359250037;-0.520984055908192;-0.52007446328358;-0.521142659647692;-0.506063857298328;-0.521072819801362;-0.51200063972333;-0.524577399104503;-0.551658764844293];
  x1_step1_gain = [1.63022882774177;1.69096827728376;1.26452635114493;1.27121475623859;1.59113210081101;1.65401236311196;1.28834379454657;1.26285348476316;1.66930801881672;1.67247215404601;1.26020613492454;1.25364039165235;1.6077818379524;1.65721783432706;1.27427079592322;1.28045062852839;1.62284383925632;1.65437917839181;1.26545143748983;1.27329503417569];
  x1_step1_ymin = -1;
  
  % Layer 1
  b1 = [2.2964250107604505;-1.8779448176450513;-1.3699910946129048;-0.65773261107477909;0.66888095490472821;2.1159783053976318;-3.0819371714129367;0.92211708198355447;-0.29600005804726309;2.221172026326609];
  IW1_1 = [-0.90833008900897905 -0.63615121597190727 -0.50741522825441121 0.12698745816018558 -0.054701876280105241 0.25786090444716686 0.17866277405619566 -0.043757878939500429 0.37344037286899179 0.18876929763085698 0.20289006620124475 0.27360160882622392 0.10432881596986368 -0.2456962327566696 -0.13186015543637147 0.15143215464048157 0.19515551935355199 0.5540741652547081 0.011546232092157889 0.33695116185317509;-0.29879719062554655 -0.55862284357988978 0.23029716806602499 -0.12201527836973255 -0.41372972677832004 -0.44107872343096727 0.450017109290413 0.16571551643038637 0.58963537033593172 -0.20737274608835315 -0.094333138253356735 0.38601038350745237 0.078362671604502221 -0.22839214579320199 1.485375112067661 2.1036603529222577 1.0763661959220083 1.2717762873929552 1.0284605195001775 0.33876633638281423;1.9650000347367336 -2.4916596498647574 1.3206221413582504 -0.87091337554214454 2.2166542865640295 -0.56178589943641555 -1.1789266517152015 -0.60158106401161893 -0.84643315562284549 0.026116229294009023 1.5295190711619082 -1.7890101929387168 -0.10267400621905735 1.7846328554800128 -1.0782015637235114 0.44631106931417425 -0.28083079456610521 1.0227486611044672 -0.35654126446126372 0.94379236826978663;0.073245197746035148 -0.57906460443240892 -0.48693797090326291 -0.5176910123728401 0.17041470550854426 0.18610892461073908 0.48633360998240027 0.48847699259574723 -0.18344650283237593 -0.32085264918083339 0.49910823587751868 -0.30725152050215582 0.019384398125128398 -0.10824306630062006 -0.32370376560783903 -0.46097104763013491 0.24713509922298568 -0.091538851403320978 -0.12573609558476864 0.061893409193575534;-0.25428352032951579 -0.44370449698961667 0.70824793526222485 -1.2978157401767707 1.4238136819948832 -0.42355873856374665 0.57082736803042922 -2.2580890660935515 0.8757006308652765 1.8599427372631629 1.3142762144549209 -0.80187737876870824 -0.36980928059236945 0.38236014540653995 -0.40568280644454269 -0.43560328321567732 -1.4092939000978066 0.074859922750477897 0.11356356480602023 0.26004447869440922;1.0721015338302109 -0.36307088417796451 1.736951336539702 0.66562531702210437 -0.48558855665651318 0.26847186782621102 1.1285098210999536 -0.18800841389007833 -2.1375172877228668 0.93100473603529021 -2.1324615671861036 0.47899829223585749 -1.8970561799968344 1.940908012253632 0.14811929901252627 0.20920405953789956 0.35653555303494422 0.48906743186369273 1.0106555429843118 -0.53744272449514485;-1.3526040916537714 0.9381565734569608 -0.089099456337853988 0.49893479232112742 -1.2060426273527807 -1.187010116171098 0.69572415156219081 -0.62099447220402848 0.091349804760416722 2.2768595016811841 -1.4434177123540237 0.99189688949808941 -3.0466378196647041 0.28319318233348023 0.30391440642863943 -0.35253440384339901 0.42152210850485539 -0.16580731966931769 -0.072450846673659877 -1.3465061540531706;0.065344320608780565 0.55403626928206606 0.21627306926525247 0.074485958885753878 -0.092088971548518458 0.75697962490115023 -0.2298679988498428 -0.68488507865480275 0.44861248182716629 -0.34261367830118516 -0.41577180949053977 -0.35101514526018934 -0.13714996534580248 -0.11574095258408515 -0.041669913324605158 0.18284204885065269 -0.094637482249970345 -0.2994458955241911 -0.4119563422801526 -0.69826636059549163;-0.56398428490436503 -1.9625076619398876 1.5420929670348031 -0.96911679488077462 0.21999775617270825 -0.8562344292897256 0.28641992467297944 -0.40373958521229963 -0.67518293378438643 -0.44407932363981323 1.198466636907856 -1.0741209508343577 -0.36798141341536333 -0.39821128810223005 -0.26459695655762966 -0.19620725322043597 -0.11110760770591907 -0.022863412587539485 -0.57266253320668081 -0.50957164597554738;0.012079084537261149 0.56210696756316214 -0.97465716560422699 -0.57746397735267063 0.0011337395465146095 0.87980504171048257 -1.6766781085581619 -2.6570727714482985 -0.27113705936575133 -1.010086158031968 -0.8682503987653073 -0.085165705661169058 -0.8027073422404194 -0.35490048823030224 -0.43201360425366692 0.26836791971727902 0.12461570303508512 0.47556152631019116 0.2733053386180162 0.42780768732164165];
  
  % Layer 2
  b2 = [0.25708126023860012;-0.13008754530245492];
  LW2_1 = [1.3775777934558837 -1.9511538114814626 2.9101846904356026 -0.47020978094360433 -1.9764372272494035 -1.9766471870972262 2.0706135850881484 0.45454991347489909 -1.6858137821120138 2.1694595850534002;-0.67040372659022818 2.1305483890895194 -2.0729479874712302 -0.79142238035106405 1.9836690674917377 1.7067568614230839 -2.204688556186301 -1.6263628653266344 1.1717039053913934 -2.9827114215510737];
  
  % ===== SIMULATION ========
  
  % Dimensions
  Q = size(x1,2); % samples
  
  % Input 1
  xp1 = mapminmax_apply(x1,x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
  
  % Layer 1
  a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);
  
  % Layer 2
  a2 = softmax_apply(repmat(b2,1,Q) + LW2_1*a1);
  
  % Output 1
  y1 = a2;
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
  y = bsxfun(@minus,x,settings_xoffset);
  y = bsxfun(@times,y,settings_gain);
  y = bsxfun(@plus,y,settings_ymin);
end

% Competitive Soft Transfer Function
function a = softmax_apply(n)
  nmax = max(n,[],1);
  n = bsxfun(@minus,n,nmax);
  numer = exp(n);
  denom = sum(numer,1); 
  denom(denom == 0) = 1;
  a = bsxfun(@rdivide,numer,denom);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end
